<!DOCTYPE html>
<html lang="en">
<head>
    <%-include('./includes/head.ejs')%>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900&display=swap');

        * {
            margin: 0;
            padding: 0;
            font-family: "Poppins", sans-serif;
        }

        body {
            background: #071023;
            color: white;
            box-sizing: border-box;
        }

        .topContainer {
            height: 125px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 8rem;
            font-size: 1.8rem;
            font-weight: 900;
        }

        .topContainer > span:nth-child(2) {
            font-size: 1.4rem;
        }

        .statuscontainer {
            height: 125px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 8rem;
            font-size: 1.8rem;
            font-weight: 900;
            margin: 30px 0;
        }

        .container, .container2 {
            background: #055e11;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            padding: 0 30px;
            font-weight: 700;
            flex-direction: column;
        }

        .container2 {
            height: 150px;
            gap: 20px;
        }

        .timercontainer {
            display: grid;
        }

        .timercontainer p {
            font-size: 18px;
        }

        #timer {
            color: gold;
            font-size: 18px;
        }

        @media only screen and (max-width: 768px) {
            .topContainer, .statuscontainer {
                padding: 0 2rem;
            }
        }

        @media only screen and (max-width: 528px) {
            .topContainer, .statuscontainer {
                padding: 0 1rem;
                font-size: 1rem;
                font-weight: 600;
            }
        }

        .bottom{
            position: fixed;
            bottom: 0;
            right: 25px;
        }

        .bottom a{
            color: white;
        }

        main{
            display: flex;
            flex-direction: column;
            /* background: yellow; */
            height: 100vh;
            position: relative;
        }

        .headLink{
            color: goldenrod;
            text-decoration: none;
            }
    </style>
</head>
<body>
    <main>
        <%-include('./includes/header.ejs')%>
            <div class="statuscontainer">
                <div class="container">
                    <p><span id="status">Loading...</span></p>
                </div>
            </div>
            <div class="statuscontainer">
                <div class="container">
                    <p>Uptime: <span id="uptime">Loading...</span></p>
                </div>
            </div>
            <div class="serverStat">
                <div class="topContainer">
                    <span>Server Stats</span>
                </div>
                <div class="statuscontainer">
                    <div class="container2">
                        <p>CPU Usage: <span id="cpuUsage">Loading...</span></p>
                        <p>Memory Usage: <span id="memoryUsage">Loading...</span></p>
                    </div>
                </div>
            </div>
    </main>

    <script>
        async function fetchStatus() {
            try {
                const response = await fetch('https://official-bac.onrender.com/api/status');
                const data = await response.json();

                document.getElementById('status').textContent = data.status;
                document.getElementById('uptime').textContent = data.uptime;
                document.getElementById('cpuUsage').textContent = data.cpuUsage + '%';
                document.getElementById('memoryUsage').textContent = data.memoryUsage + ' MB';

                if (data.maintenanceEndTime) {
                    const endDate = new Date(data.maintenanceEndTime);
                    startCountdown(endDate);
                }
            } catch (error) {
                console.error('Error fetching status:', error);
                document.getElementById('status').textContent = 'ðŸ”´ All Systems are down';
            }
        }

        function startTimer() {
            let countdown = 15;
            const timerElement = document.getElementById('timer');

            setInterval(() => {
                timerElement.textContent = countdown;
                countdown--;

                if (countdown < 0) {
                    fetchStatus();
                    countdown = 15;
                }
            }, 1000);
        }


        fetchStatus();
        startTimer();
    </script>
</body>
</html>
